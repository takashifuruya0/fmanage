name: Test and Deploy 

on:
  push:
    branches: [ production ]

jobs:
  build:

    runs-on: ubuntu-16.04
#     strategy:
#       max-parallel: 4
#       matrix:
#         python-version: [3.7, ]

    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-python@v2
      with:
        python-version: '3.7' # Version range or exact version of a Python version to use, using SemVer's version range syntax
        architecture: 'x64' # optional x64 or x86. Defaults to x64 if not specified:  
    - name: Prepare Env
      run: |
        echo "TEST=test" > .env
        echo "TRELLO_KEY=1" >> .env
        echo "TRELLO_TOKEN=1" >> .env
        echo "GOLDPOINT_ID=1" >> .env
        echo "GOLDPOINT_PASSWORD=1" >> .env
        echo "CELERY_ENVIRONMENT=fmanage.settings" >> .env
        echo "URL_SLACK_NAMS=1" >> .env
        echo "LANCERS_PASSWORD=1" >> .env
        echo "LANCERS_USER_ID=1" >> .env
        echo "DRF_TOKEN=1" >> .env
        python3 --version
        pip3 --version
    - name: Install dependencies
      run: |
        sudo apt update
        sudo apt upgrade -y
        sudo apt-get install python3-setuptools
        python3 -m pip install --upgrade pip
        pip3 install -r requirements.txt

#     - name: Run Migrations # run migrations to create table in side car db container
#       run: python3 manage.py migrate 
#       env:
#         SECRET_KEY: githubactions
#         SENDGRID_API_KEY: a

    - name: Django app test
      run: python3 manage.py test 
#       env:
#         SECRET_KEY: githubactions
#         SENDGRID_API_KEY: a

    - name: deploy
      env:
        SECRET_KEY: ${{ secrets.SECRET_KEY }}
        SSH_USER: ${{ secrets.SSH_USER }}
        SSH_ADDR: ${{ secrets.SSH_ADDR }}
        SSH_COMMAND: ${{ secrets.SSH_COMMAND }}
      run: |
        echo "${SECRET_KEY}" > secret_key
        chmod 600 secret_key
        ssh -oStrictHostKeyChecking=no ${SSH_USER}@${SSH_ADDR} -i secret_key "${SSH_COMMAND}"
